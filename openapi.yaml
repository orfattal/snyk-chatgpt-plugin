{
  "components": {
    "headers": {
      "DeprecationHeader": {
        "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:\nhttps://tools.ietf.org/id/draft-dalal-deprecation-header-01.html\n",
        "example": "2021-07-01T00:00:00Z",
        "schema": {
          "format": "date-time",
          "type": "string"
        }
      },
      "InternalGlooNormalizedPathHeader": {
        "description": "An internal header used by Snyk's API-Gateway for analytics.\n",
        "schema": {
          "type": "string"
        },
        "x-snyk-internal": true
      },
      "InternalGlooOrgIdHeader": {
        "description": "An internal header used by Snyk's API-Gateway for analytics.\n",
        "schema": {
          "format": "uuid",
          "type": "string"
        },
        "x-snyk-internal": true
      },
      "Location": {
        "schema": {
          "type": "string"
        }
      },
      "LocationHeader": {
        "description": "A header providing a URL for the location of a resource\n",
        "example": "https://example.com/resource/4",
        "schema": {
          "format": "url",
          "type": "string"
        }
      },
      "RequestIdResponseHeader": {
        "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.\n",
        "example": "4b58e274-ec62-4fab-917b-1d2c48d6bdef",
        "schema": {
          "format": "uuid",
          "type": "string"
        }
      },
      "SunsetHeader": {
        "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:\nhttps://datatracker.ietf.org/doc/html/rfc8594\n",
        "example": "2021-08-02T00:00:00Z",
        "schema": {
          "format": "date-time",
          "type": "string"
        }
      },
      "VersionRequestedResponseHeader": {
        "description": "A header containing the version of the endpoint requested by the caller.",
        "example": "2021-06-04",
        "schema": {
          "$ref": "#/components/schemas/QueryVersion"
        }
      },
      "VersionServedResponseHeader": {
        "description": "A header containing the version of the endpoint that was served by the API.",
        "example": "2021-06-04",
        "schema": {
          "$ref": "#/components/schemas/ActualVersion"
        }
      },
      "VersionStageResponseHeader": {
        "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.\n",
        "schema": {
          "enum": [
            "wip",
            "experimental",
            "beta",
            "ga",
            "deprecated",
            "sunset"
          ],
          "example": "ga",
          "type": "string"
        }
      }
    },
    "parameters": {
      "ClientId": {
        "description": "Client ID",
        "in": "path",
        "name": "client_id",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Uuid"
        }
      },
      "CreatedAfter": {
        "description": "Return environments created after this date",
        "example": "2022-05-06T12:25:15-04:00",
        "in": "query",
        "name": "created_after",
        "schema": {
          "format": "date-time",
          "type": "string"
        }
      },
      "CreatedBefore": {
        "description": "Return environments created before this date",
        "example": "2022-05-06T12:25:15-04:00",
        "in": "query",
        "name": "created_before",
        "schema": {
          "format": "date-time",
          "type": "string"
        }
      },
      "CustomBaseImageId": {
        "description": "Unique identifier for custom base image",
        "in": "path",
        "name": "custombaseimage_id",
        "required": true,
        "schema": {
          "format": "uuid",
          "type": "string"
        }
      },
      "EndingBefore": {
        "description": "Return the page of results immediately before this cursor",
        "example": "v1.eyJpZCI6IjExMDAifQo=",
        "in": "query",
        "name": "ending_before",
        "schema": {
          "type": "string"
        }
      },
      "EnvironmentId": {
        "description": "Unique identifier for an environment",
        "example": "052781a7-17f6-494d-0000-25c8b509abcd",
        "in": "path",
        "name": "environment_id",
        "required": true,
        "schema": {
          "format": "uuid",
          "type": "string"
        }
      },
      "EnvironmentIdQuery": {
        "description": "Filter resources by environment ID (multi-value, comma-separated)",
        "example": "052781a7-17f6-494d-0000-25c8b509abcd",
        "explode": false,
        "in": "query",
        "name": "environment_id",
        "schema": {
          "type": "string"
        },
        "style": "form"
      },
      "Format": {
        "description": "The desired SBOM format of the response.",
        "in": "query",
        "name": "format",
        "schema": {
          "enum": [
            "cyclonedx1.4+json",
            "cyclonedx1.4+xml",
            "spdx2.3+json"
          ],
          "example": "cyclonedx1.4+json",
          "type": "string"
        }
      },
      "GroupId": {
        "description": "The ID of the group",
        "in": "path",
        "name": "group_id",
        "required": true,
        "schema": {
          "format": "uuid",
          "type": "string"
        }
      },
      "Id": {
        "description": "Filter resources by resource UUID (multi-value, comma-separated)",
        "example": "4a662442-7445-55c3-adcc-cbbbdd99999",
        "explode": false,
        "in": "query",
        "name": "id",
        "schema": {
          "type": "string"
        },
        "style": "form"
      },
      "IdInQuery": {
        "description": "Filter environments by environment ID (multi-value, comma-separated)",
        "example": "052781a7-17f6-494d-0000-25c8b509abcd",
        "in": "query",
        "name": "id",
        "schema": {
          "format": "uuid",
          "type": "string"
        }
      },
      "ImageId": {
        "description": "Image ID",
        "in": "path",
        "name": "image_id",
        "required": true,
        "schema": {
          "example": "sha256:2bd864580926b790a22c8b96fd74496fe87b3c59c0774fe144bab2788e78e676",
          "format": "uri",
          "pattern": "^sha256:[a-f0-9]{64}$",
          "type": "string"
        }
      },
      "ImageIds": {
        "description": "A comma-separated list of Image IDs",
        "example": [
          "sha256:b26f21f90920dba8401e30b89ad803587f81cce9bd1f92750f963556da2f930f",
          "sha256:28984a62eb713aa5fff922ba06e8689f20e4b2f07de30f3d753b868389c0904f"
        ],
        "explode": false,
        "in": "query",
        "name": "image_ids",
        "schema": {
          "items": {
            "format": "uri",
            "pattern": "^sha256:[a-f0-9]{64}$",
            "type": "string"
          },
          "maxItems": 100,
          "type": "array"
        },
        "style": "form"
      },
      "IncludeInRecommendations": {
        "description": "Whether this image should be recommended as a base image upgrade",
        "in": "query",
        "name": "include_in_recommendations",
        "schema": {
          "type": "boolean"
        }
      },
      "Kind": {
        "description": "Filter resources by kind (multi-value, comma-separated): cloud",
        "example": "cloud",
        "explode": false,
        "in": "query",
        "name": "kind",
        "schema": {
          "type": "string"
        },
        "style": "form"
      },
      "KindInQuery": {
        "description": "Filter environments by kind (multi-value, comma-separated): aws",
        "example": "aws",
        "in": "query",
        "name": "kind",
        "schema": {
          "type": "string"
        }
      },
      "Limit": {
        "description": "Number of results to return per page",
        "example": 10,
        "in": "query",
        "name": "limit",
        "schema": {
          "default": 10,
          "format": "int32",
          "maximum": 100,
          "minimum": 10,
          "multipleOf": 10,
          "type": "integer"
        }
      },
      "Location": {
        "description": "Filter resources by location (multi-value, comma-separated) (AWS region)",
        "example": "us-west-2",
        "explode": false,
        "in": "query",
        "name": "location",
        "schema": {
          "type": "string"
        },
        "style": "form"
      },
      "Name": {
        "description": "Filter resources by name (multi-value, comma-separated)",
        "example": "example-bucket",
        "explode": false,
        "in": "query",
        "name": "name",
        "schema": {
          "type": "string"
        },
        "style": "form"
      },
      "NameInQuery": {
        "description": "Filter environments by name (multi-value, comma-separated)",
        "example": "Demo AWS Environment",
        "in": "query",
        "name": "name",
        "schema": {
          "type": "string"
        }
      },
      "Names": {
        "description": "The container registry names",
        "example": [
          "gcr.io/snyk/redis:5"
        ],
        "explode": false,
        "in": "query",
        "name": "names",
        "schema": {
          "items": {
            "$ref": "#/components/schemas/ImageName"
          },
          "maxItems": 1,
          "type": "array"
        },
        "style": "form"
      },
      "NativeId": {
        "description": "Filter resources by native ID (multi-value, comma-separated) (AWS ARN)",
        "example": "arn:aws:s3:::example-bucket",
        "explode": false,
        "in": "query",
        "name": "native_id",
        "schema": {
          "type": "string"
        },
        "style": "form"
      },
      "NativeIdInQuery": {
        "description": "Filter environments by native ID (multi-value, comma-separated)",
        "example": "123456789012",
        "in": "query",
        "name": "native_id",
        "schema": {
          "type": "string"
        }
      },
      "OrgId": {
        "description": "The organization ID of the custom base image",
        "in": "query",
        "name": "org_id",
        "schema": {
          "format": "uuid",
          "type": "string"
        }
      },
      "PackageUrl": {
        "description": "A URI-encoded Package URL (purl). Supported purl types are apk, cargo, cocoapods, composer, deb, gem, generic, hex, maven, npm, nuget, pypi, rpm, and swift. A version for the package is also required.",
        "example": "pkg%3Amaven%2Fcom.fasterxml.woodstox%2Fwoodstox-core%405.0.0",
        "in": "path",
        "name": "purl",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "Platform": {
        "description": "The image Operating System and processor architecture",
        "example": "linux/amd64",
        "in": "query",
        "name": "platform",
        "schema": {
          "$ref": "#/components/schemas/Platform"
        }
      },
      "ProjectId": {
        "description": "The ID of the container project that the custom base image is based off of.",
        "in": "query",
        "name": "project_id",
        "schema": {
          "format": "uuid",
          "type": "string"
        }
      },
      "Removed": {
        "description": "Filter resources by whether they have been removed or not.",
        "example": true,
        "explode": false,
        "in": "query",
        "name": "removed",
        "schema": {
          "type": "boolean"
        },
        "style": "form"
      },
      "Repository": {
        "description": "The image repository",
        "in": "query",
        "name": "repository",
        "schema": {
          "type": "string"
        }
      },
      "ResourceId": {
        "description": "Filter resources by resource ID (multi-value, comma-separated)",
        "example": "example-bucket",
        "explode": false,
        "in": "query",
        "name": "resource_id",
        "schema": {
          "type": "string"
        },
        "style": "form"
      },
      "ResourceType": {
        "description": "Filter resources by resource type (multi-value, comma-separated)",
        "example": "aws_s3_bucket",
        "explode": false,
        "in": "query",
        "name": "resource_type",
        "schema": {
          "type": "string"
        },
        "style": "form"
      },
      "SortBy": {
        "description": "Which column to sort by. \nIf sorting by version, the versioning schema is used.\n",
        "in": "query",
        "name": "sort_by",
        "schema": {
          "enum": [
            "repository",
            "tag",
            "version"
          ],
          "type": "string"
        }
      },
      "SortDirection": {
        "description": "Which direction to sort",
        "in": "query",
        "name": "sort_direction",
        "schema": {
          "default": "ASC",
          "enum": [
            "ASC",
            "DESC"
          ],
          "type": "string"
        }
      },
      "SsoId": {
        "description": "The ID of the SSO",
        "in": "path",
        "name": "sso_id",
        "required": true,
        "schema": {
          "format": "uuid",
          "type": "string"
        }
      },
      "StartingAfter": {
        "description": "Return the page of results immediately after this cursor",
        "example": "v1.eyJpZCI6IjEwMDAifQo=",
        "in": "query",
        "name": "starting_after",
        "schema": {
          "type": "string"
        }
      },
      "StatusInQuery": {
        "description": "Filter environments by latest scan status (multi-value, comma-separated): queued, in_progress, success, error",
        "example": "error",
        "in": "query",
        "name": "status",
        "schema": {
          "type": "string"
        }
      },
      "Tag": {
        "description": "The image tag",
        "in": "query",
        "name": "tag",
        "schema": {
          "type": "string"
        }
      },
      "UpdatedAfter": {
        "description": "Return environments updated after this date",
        "example": "2022-05-06T12:25:15-04:00",
        "in": "query",
        "name": "updated_after",
        "schema": {
          "format": "date-time",
          "type": "string"
        }
      },
      "UpdatedBefore": {
        "description": "Return environments updated before this date",
        "example": "2022-05-06T12:25:15-04:00",
        "in": "query",
        "name": "updated_before",
        "schema": {
          "format": "date-time",
          "type": "string"
        }
      },
      "UserId": {
        "description": "The ID of the User",
        "in": "path",
        "name": "user_id",
        "required": true,
        "schema": {
          "format": "uuid",
          "type": "string"
        }
      },
      "Version": {
        "description": "The requested version of the endpoint to process the request",
        "example": "2021-06-04",
        "in": "query",
        "name": "version",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/QueryVersion"
        }
      }
    },
    "responses": {
      "204": {
        "description": "The operation completed successfully with no content",
        "headers": {
          "deprecation": {
            "$ref": "#/components/headers/DeprecationHeader"
          },
          "snyk-request-id": {
            "$ref": "#/components/headers/RequestIdResponseHeader"
          },
          "snyk-version-lifecycle-stage": {
            "$ref": "#/components/headers/VersionStageResponseHeader"
          },
          "snyk-version-requested": {
            "$ref": "#/components/headers/VersionRequestedResponseHeader"
          },
          "snyk-version-served": {
            "$ref": "#/components/headers/VersionServedResponseHeader"
          },
          "sunset": {
            "$ref": "#/components/headers/SunsetHeader"
          }
        }
      },
      "400": {
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorDocument"
            }
          }
        },
        "description": "Bad Request: A parameter provided as a part of the request was invalid.",
        "headers": {
          "deprecation": {
            "$ref": "#/components/headers/DeprecationHeader"
          },
          "snyk-request-id": {
            "$ref": "#/components/headers/RequestIdResponseHeader"
          },
          "snyk-version-lifecycle-stage": {
            "$ref": "#/components/headers/VersionStageResponseHeader"
          },
          "snyk-version-requested": {
            "$ref": "#/components/headers/VersionRequestedResponseHeader"
          },
          "snyk-version-served": {
            "$ref": "#/components/headers/VersionServedResponseHeader"
          },
          "sunset": {
            "$ref": "#/components/headers/SunsetHeader"
          }
        }
      },
      "401": {
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorDocument"
            }
          }
        },
        "description": "Unauthorized: the request requires an authentication token.",
        "headers": {
          "deprecation": {
            "$ref": "#/components/headers/DeprecationHeader"
          },
          "snyk-request-id": {
            "$ref": "#/components/headers/RequestIdResponseHeader"
          },
          "snyk-version-lifecycle-stage": {
            "$ref": "#/components/headers/VersionStageResponseHeader"
          },
          "snyk-version-requested": {
            "$ref": "#/components/headers/VersionRequestedResponseHeader"
          },
          "snyk-version-served": {
            "$ref": "#/components/headers/VersionServedResponseHeader"
          },
          "sunset": {
            "$ref": "#/components/headers/SunsetHeader"
          }
        }
      },
      "403": {
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorDocument"
            }
          }
        },
        "description": "Forbidden: the request requires an authentication token with more or different permissions.",
        "headers": {
          "deprecation": {
            "$ref": "#/components/headers/DeprecationHeader"
          },
          "snyk-request-id": {
            "$ref": "#/components/headers/RequestIdResponseHeader"
          },
          "snyk-version-lifecycle-stage": {
            "$ref": "#/components/headers/VersionStageResponseHeader"
          },
          "snyk-version-requested": {
            "$ref": "#/components/headers/VersionRequestedResponseHeader"
          },
          "snyk-version-served": {
            "$ref": "#/components/headers/VersionServedResponseHeader"
          },
          "sunset": {
            "$ref": "#/components/headers/SunsetHeader"
          }
        }
      },
      "404": {
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorDocument"
            }
          }
        },
        "description": "Not Found: The resource being operated on could not be found.",
        "headers": {
          "deprecation": {
            "$ref": "#/components/headers/DeprecationHeader"
          },
          "snyk-request-id": {
            "$ref": "#/components/headers/RequestIdResponseHeader"
          },
          "snyk-version-lifecycle-stage": {
            "$ref": "#/components/headers/VersionStageResponseHeader"
          },
          "snyk-version-requested": {
            "$ref": "#/components/headers/VersionRequestedResponseHeader"
          },
          "snyk-version-served": {
            "$ref": "#/components/headers/VersionServedResponseHeader"
          },
          "sunset": {
            "$ref": "#/components/headers/SunsetHeader"
          }
        }
      },
      "409": {
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorDocument"
            }
          }
        },
        "description": "Conflict: The requested operation conflicts with the current state of the resource in some way.",
        "headers": {
          "deprecation": {
            "$ref": "#/components/headers/DeprecationHeader"
          },
          "snyk-request-id": {
            "$ref": "#/components/headers/RequestIdResponseHeader"
          },
          "snyk-version-lifecycle-stage": {
            "$ref": "#/components/headers/VersionStageResponseHeader"
          },
          "snyk-version-requested": {
            "$ref": "#/components/headers/VersionRequestedResponseHeader"
          },
          "snyk-version-served": {
            "$ref": "#/components/headers/VersionServedResponseHeader"
          },
          "sunset": {
            "$ref": "#/components/headers/SunsetHeader"
          }
        }
      },
      "500": {
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorDocument"
            }
          }
        },
        "description": "Internal Server Error: An error was encountered while attempting to process the request.",
        "headers": {
          "deprecation": {
            "$ref": "#/components/headers/DeprecationHeader"
          },
          "snyk-request-id": {
            "$ref": "#/components/headers/RequestIdResponseHeader"
          },
          "snyk-version-lifecycle-stage": {
            "$ref": "#/components/headers/VersionStageResponseHeader"
          },
          "snyk-version-requested": {
            "$ref": "#/components/headers/VersionRequestedResponseHeader"
          },
          "snyk-version-served": {
            "$ref": "#/components/headers/VersionServedResponseHeader"
          },
          "sunset": {
            "$ref": "#/components/headers/SunsetHeader"
          }
        }
      }
    },
    "schemas": {
      "Org": {
        "additionalProperties": false,
        "properties": {
          "attributes": {
            "additionalProperties": false,
            "properties": {
              "group_id": {
                "description": "The ID of a Group.",
                "example": "59d6d97e-3106-4ebb-b608-352fad9c5b34",
                "format": "uuid",
                "type": "string"
              },
              "is_personal": {
                "description": "Whether this organization belongs to an individual, rather than a Group.",
                "example": true,
                "type": "boolean"
              },
              "name": {
                "description": "Friendly name of the organization.",
                "example": "My Org",
                "type": "string"
              },
              "slug": {
                "description": "Unique URL sanitized name of the organization for accessing it in Snyk.",
                "example": "my-org",
                "type": "string"
              }
            },
            "required": [
              "name",
              "slug",
              "is_personal"
            ],
            "type": "object"
          },
          "id": {
            "description": "The Snyk ID corresponding to this org",
            "example": "59d6d97e-3106-4ebb-b608-352fad9c5b34",
            "format": "uuid",
            "type": "string"
          },
          "type": {
            "description": "Content type.",
            "example": "org",
            "type": "string"
          }
        },
        "required": [
          "type",
          "id"
        ],
        "type": "object"
      },
      "ProjectAttributes": {
        "additionalProperties": false,
        "properties": {
          "build_args": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/YarnBuildArgs"
              },
              {
                "$ref": "#/components/schemas/ContainerBuildArgs"
              },
              {
                "$ref": "#/components/schemas/NugetBuildArgs"
              }
            ]
          },
          "business_criticality": {
            "example": [
              "medium"
            ],
            "items": {
              "enum": [
                "critical",
                "high",
                "medium",
                "low"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "created": {
            "description": "The date that the project was created on",
            "example": "2021-05-29T09:50:54.014Z",
            "format": "date-time",
            "type": "string"
          },
          "environment": {
            "example": [
              "external",
              "hosted"
            ],
            "items": {
              "enum": [
                "frontend",
                "backend",
                "internal",
                "external",
                "mobile",
                "saas",
                "onprem",
                "hosted",
                "distributed"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "lifecycle": {
            "example": [
              "production"
            ],
            "items": {
              "enum": [
                "production",
                "development",
                "sandbox"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "description": "Project name.",
            "example": "snyk/goof",
            "type": "string"
          },
          "origin": {
            "description": "The origin the project was added from.",
            "example": "github",
            "type": "string"
          },
          "settings": {
            "$ref": "#/components/schemas/ProjectSettings"
          },
          "status": {
            "description": "Describes if a project is currently monitored or it is de-activated.",
            "enum": [
              "active",
              "inactive"
            ],
            "example": "active",
            "type": "string"
          },
          "tags": {
            "example": [
              {
                "key": "tag-key",
                "value": "tag-value"
              }
            ],
            "items": {
              "properties": {
                "key": {
                  "example": "tag-key",
                  "type": "string"
                },
                "value": {
                  "example": "tag-value",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "target_file": {
            "description": "Path within the target to identify a specific file/directory/image etc. when scanning just part  of the target, and not the entity.",
            "example": "package.json",
            "type": "string"
          },
          "target_reference": {
            "description": "The additional information required to resolve which revision of the resource should be scanned.",
            "example": "main",
            "type": "string"
          },
          "type": {
            "description": "The package manager of the project.",
            "example": "maven",
            "type": "string"
          }
        },
        "required": [
          "name",
          "type",
          "target_file",
          "target_reference",
          "origin",
          "created",
          "status",
          "settings"
        ],
        "type": "object"
      },
      "ProjectDeprecated": {
        "additionalProperties": false,
        "properties": {
          "attributes": {
            "additionalProperties": false,
            "properties": {
              "businessCriticality": {
                "example": [
                  "medium"
                ],
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "created": {
                "description": "The date that the project was created on",
                "example": "2021-05-29T09:50:54.014Z",
                "format": "date-time",
                "type": "string"
              },
              "environment": {
                "example": [
                  "external",
                  "hosted"
                ],
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "lifecycle": {
                "example": [
                  "production"
                ],
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "name": {
                "example": "snyk/goof",
                "type": "string"
              },
              "origin": {
                "description": "The origin the project was added from",
                "example": "github",
                "type": "string"
              },
              "status": {
                "description": "Describes if a project is currently monitored or it is de-activated",
                "example": "active",
                "type": "string"
              },
              "tags": {
                "example": [
                  {
                    "key": "tag-key",
                    "value": "tag-value"
                  }
                ],
                "items": {
                  "$ref": "#/components/schemas/Tag"
                },
                "type": "array"
              },
              "targetReference": {
                "description": "The identifier for which revision of the resource is scanned by Snyk. For example this may be a branch for SCM project, or a tag for a container image",
                "example": "master",
                "nullable": true,
                "type": "string"
              },
              "type": {
                "description": "The package manager of the project",
                "example": "maven",
                "type": "string"
              }
            },
            "required": [
              "name",
              "created",
              "origin",
              "type",
              "status"
            ],
            "type": "object"
          },
          "id": {
            "description": "The ID.",
            "example": "331ede0a-de94-456f-b788-166caeca58bf",
            "format": "uuid",
            "type": "string"
          },
          "relationships": {
            "additionalProperties": false,
            "properties": {
              "importingUser": {
                "$ref": "#/components/schemas/DeprecatedRelationship"
              },
              "org": {
                "$ref": "#/components/schemas/DeprecatedRelationship"
              },
              "owner": {
                "$ref": "#/components/schemas/DeprecatedRelationship"
              },
              "target": {
                "$ref": "#/components/schemas/DeprecatedRelationship"
              }
            },
            "type": "object"
          },
          "type": {
            "description": "Content type.",
            "example": "projects",
            "type": "string"
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "type": "object"
      },
      "ProjectRelationships": {
        "additionalProperties": false,
        "properties": {
          "importer": {
            "$ref": "#/components/schemas/Relationship"
          },
          "organization": {
            "$ref": "#/components/schemas/Relationship"
          },
          "owner": {
            "$ref": "#/components/schemas/Relationship"
          },
          "target": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Relationship"
              },
              {
                "$ref": "#/components/schemas/Target"
              }
            ]
          }
        },
        "required": [
          "target",
          "organization"
        ],
        "type": "object"
      },
      "ProjectSettings": {
        "additionalProperties": false,
        "properties": {
          "auto_dependency_upgrade": {
            "$ref": "#/components/schemas/AutoDependencyUpgradeSettings"
          },
          "auto_remediation_prs": {
            "$ref": "#/components/schemas/AutoRemediationPRsSettings"
          },
          "manual_remediation_prs": {
            "$ref": "#/components/schemas/ManualRemediationPRsSettings"
          },
          "pull_request_assignment": {
            "$ref": "#/components/schemas/PullRequestAssignmentSettings"
          },
          "pull_requests": {
            "$ref": "#/components/schemas/PullRequestsSettings"
          },
          "recurring_tests": {
            "$ref": "#/components/schemas/RecurringTestsSettings"
          }
        },
        "required": [
          "recurring_tests",
          "pull_requests"
        ],
        "type": "object"
      },
      "Target": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "properties": {
              "attributes": {
                "additionalProperties": false,
                "properties": {
                  "display_name": {
                    "description": "The human readable name that represents this target. These are generated based on the provided properties, and the source. In the future we may support updating this value.\n",
                    "example": "snyk-fixtures/goof",
                    "type": "string"
                  },
                  "url": {
                    "description": "The URL for the resource. We do not use this as part of our representation of the identity of the target, as it can      be changed externally to Snyk We are reliant on individual integrations providing us with this value. Currently it is only provided by the CLI\n",
                    "example": "http://github.com/snyk/local-goof",
                    "nullable": true,
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "id": {
                "description": "The Resource ID.",
                "format": "uuid",
                "type": "string"
              },
              "type": {
                "description": "The Resource type.",
                "example": "target",
                "type": "string"
              }
            },
            "required": [
              "type",
              "id",
              "attributes"
            ],
            "type": "object"
          },
          "links": {
            "$ref": "#/components/schemas/RelatedLink"
          }
        },
        "required": [
          "data",
          "links"
        ],
        "type": "object"
      },
      "Error": {
        "additionalProperties": false,
        "example": {
          "detail": "Not Found",
          "status": "404"
        },
        "properties": {
          "code": {
            "description": "An application-specific error code, expressed as a string value.",
            "example": "entity-not-found",
            "type": "string"
          },
          "detail": {
            "description": "A human-readable explanation specific to this occurrence of the problem.",
            "example": "The request was missing these required fields: ...",
            "type": "string"
          },
          "id": {
            "description": "A unique identifier for this particular occurrence of the problem.",
            "example": "f16c31b5-6129-4571-add8-d589da9be524",
            "format": "uuid",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/ErrorLink"
          },
          "meta": {
            "additionalProperties": true,
            "example": {
              "key": "value"
            },
            "type": "object"
          },
          "source": {
            "additionalProperties": false,
            "example": {
              "pointer": "/data/attributes"
            },
            "properties": {
              "parameter": {
                "description": "A string indicating which URI query parameter caused the error.",
                "example": "param1",
                "type": "string"
              },
              "pointer": {
                "description": "A JSON Pointer [RFC6901] to the associated entity in the request document.",
                "example": "/data/attributes",
                "type": "string"
              }
            },
            "type": "object"
          },
          "status": {
            "description": "The HTTP status code applicable to this problem, expressed as a string value.",
            "example": "400",
            "pattern": "^[45]\\d\\d$",
            "type": "string"
          },
          "title": {
            "description": "A short, human-readable summary of the problem that SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization.",
            "example": "Bad request",
            "type": "string"
          }
        },
        "required": [
          "status",
          "detail"
        ],
        "type": "object"
      },
      "ErrorDocument": {
        "additionalProperties": false,
        "example": {
          "errors": [
            {
              "detail": "Permission denied for this resource",
              "status": "403"
            }
          ],
          "jsonapi": {
            "version": "1.0"
          }
        },
        "properties": {
          "errors": {
            "example": [
              {
                "detail": "Permission denied for this resource",
                "status": "403"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "minItems": 1,
            "type": "array"
          },
          "jsonapi": {
            "$ref": "#/components/schemas/JsonApi"
          }
        },
        "required": [
          "jsonapi",
          "errors"
        ],
        "type": "object"
      },
      "ErrorLink": {
        "additionalProperties": false,
        "description": "A link that leads to further details about this particular occurrance of the problem.",
        "example": {
          "about": "https://example.com/about_this_error"
        },
        "properties": {
          "about": {
            "$ref": "#/components/schemas/LinkProperty"
          }
        },
        "type": "object"
      },
      "Group": {
        "additionalProperties": false,
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/GroupAttributes"
          },
          "id": {
            "example": "331ede0a-de94-456f-b788-166caeca58bf",
            "format": "uuid",
            "type": "string"
          },
          "type": {
            "description": "Content type.",
            "example": "group",
            "type": "string"
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "type": "object"
      },
      "GroupAttributes": {
        "additionalProperties": false,
        "properties": {
          "name": {
            "description": "The name of the group.",
            "example": "My Group",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "Id": {
        "format": "uuid",
        "type": "string"
      },
      "IssuesMeta": {
        "properties": {
          "package": {
            "$ref": "#/components/schemas/PackageMeta"
          }
        },
        "type": "object"
      },
      "IssuesResponse": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/CommonIssueModel"
            },
            "type": "array"
          },
          "jsonapi": {
            "$ref": "#/components/schemas/JsonApi"
          },
          "links": {
            "$ref": "#/components/schemas/PaginatedLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/IssuesMeta"
          }
        },
        "type": "object"
      },
      "IssuesWithPurlsResponse": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/CommonIssueModelVTwo"
            },
            "type": "array"
          },
          "jsonapi": {
            "$ref": "#/components/schemas/JsonApi"
          },
          "links": {
            "$ref": "#/components/schemas/PaginatedLinks"
          }
        },
        "type": "object"
      },
      "JsonApi": {
        "additionalProperties": false,
        "example": {
          "version": "1.0"
        },
        "properties": {
          "version": {
            "description": "Version of the JSON API specification this server supports.",
            "example": "1.0",
            "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)$",
            "type": "string"
          }
        },
        "required": [
          "version"
        ],
        "type": "object"
      }
    },
    "securitySchemes": {
      "APIToken": {
        "description": "API key value must be prefixed with \\\"Token \\\".",
        "in": "header",
        "name": "Authorization",
        "type": "apiKey"
      },
      "BearerAuth": {
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "info": {
    "title": "Snyk API",
    "version": "REST"
  },
  "openapi": "3.0.3",
  "paths": {
    "/groups": {
      "get": {
        "description": "Returns a list of groups which a user is a member of",
        "operationId": "listGroups",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/Group"
                      },
                      "type": "array"
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/JsonApi"
                    },
                    "links": {
                      "$ref": "#/components/schemas/Links"
                    }
                  },
                  "required": [
                    "jsonapi",
                    "data",
                    "links"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A list of groups is returned",
            "headers": {
              "deprecation": {
                "$ref": "#/components/headers/DeprecationHeader"
              },
              "snyk-request-id": {
                "$ref": "#/components/headers/RequestIdResponseHeader"
              },
              "snyk-version-lifecycle-stage": {
                "$ref": "#/components/headers/VersionStageResponseHeader"
              },
              "snyk-version-requested": {
                "$ref": "#/components/headers/VersionRequestedResponseHeader"
              },
              "snyk-version-served": {
                "$ref": "#/components/headers/VersionServedResponseHeader"
              },
              "sunset": {
                "$ref": "#/components/headers/SunsetHeader"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Get all groups",
        "tags": [
          "Groups"
        ],
        "x-snyk-api-releases": [
          "2022-01-31~experimental",
          "2023-01-30~beta"
        ],
        "x-snyk-api-version": "2023-01-30~beta"
      }
    },
    "/groups/{group_id}": {
      "get": {
        "description": "Returns a group by its ID",
        "operationId": "getGroup",
        "parameters": [
          {
            "description": "The id of the group",
            "in": "path",
            "name": "group_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Group"
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/JsonApi"
                    },
                    "links": {
                      "$ref": "#/components/schemas/Links"
                    }
                  },
                  "required": [
                    "jsonapi",
                    "data",
                    "links"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Group is returned",
            "headers": {
              "deprecation": {
                "$ref": "#/components/headers/DeprecationHeader"
              },
              "snyk-request-id": {
                "$ref": "#/components/headers/RequestIdResponseHeader"
              },
              "snyk-version-lifecycle-stage": {
                "$ref": "#/components/headers/VersionStageResponseHeader"
              },
              "snyk-version-requested": {
                "$ref": "#/components/headers/VersionRequestedResponseHeader"
              },
              "snyk-version-served": {
                "$ref": "#/components/headers/VersionServedResponseHeader"
              },
              "sunset": {
                "$ref": "#/components/headers/SunsetHeader"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Get a group",
        "tags": [
          "Groups"
        ],
        "x-snyk-api-releases": [
          "2022-01-31~experimental",
          "2023-01-30~beta"
        ],
        "x-snyk-api-version": "2023-01-30~beta"
      }
    },
    "/orgs/{org_id}": {
      "get": {
        "description": "Returns an org by its ID",
        "operationId": "getOrg",
        "parameters": [
          {
            "description": "The ID of the org",
            "in": "path",
            "name": "org_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Org"
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/JsonApi"
                    },
                    "links": {
                      "$ref": "#/components/schemas/Links"
                    }
                  },
                  "required": [
                    "jsonapi",
                    "data",
                    "links"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Org is returned",
            "headers": {
              "deprecation": {
                "$ref": "#/components/headers/DeprecationHeader"
              },
              "snyk-request-id": {
                "$ref": "#/components/headers/RequestIdResponseHeader"
              },
              "snyk-version-lifecycle-stage": {
                "$ref": "#/components/headers/VersionStageResponseHeader"
              },
              "snyk-version-requested": {
                "$ref": "#/components/headers/VersionRequestedResponseHeader"
              },
              "snyk-version-served": {
                "$ref": "#/components/headers/VersionServedResponseHeader"
              },
              "sunset": {
                "$ref": "#/components/headers/SunsetHeader"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Get an org",
        "tags": [
          "Orgs"
        ],
        "x-snyk-api-releases": [
          "2022-02-16~experimental",
          "2022-04-06~experimental",
          "2022-12-15~beta"
        ],
        "x-snyk-api-version": "2022-12-15~beta"
      }
    },
    "/orgs/{org_id}/projects/{project_id}": {
      "get": {
        "description": "Get one project of the organization by project ID.",
        "operationId": "getOrgProject",
        "parameters": [
          {
            "description": "The ID of the org to which the project belongs to.",
            "in": "path",
            "name": "org_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "The ID of the project.",
            "in": "path",
            "name": "project_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Expand relationships.",
            "explode": false,
            "in": "query",
            "name": "expand",
            "schema": {
              "items": {
                "enum": [
                  "target"
                ],
                "type": "string"
              },
              "type": "array"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "additionalProperties": false,
                      "properties": {
                        "attributes": {
                          "$ref": "#/components/schemas/ProjectAttributes"
                        },
                        "id": {
                          "description": "The Resource ID.",
                          "format": "uuid",
                          "type": "string"
                        },
                        "meta": {
                          "additionalProperties": false,
                          "properties": {
                            "cli_monitored_at": {
                              "description": "The date that the project was last uploaded and monitored using cli.",
                              "example": "2021-05-29T09:50:54.014Z",
                              "format": "date-time",
                              "nullable": true,
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "relationships": {
                          "$ref": "#/components/schemas/ProjectRelationships"
                        },
                        "type": {
                          "description": "The Resource type.",
                          "example": "project",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type",
                        "attributes"
                      ],
                      "type": "object"
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/JsonApi"
                    },
                    "links": {
                      "$ref": "#/components/schemas/Links"
                    }
                  },
                  "required": [
                    "jsonapi",
                    "data",
                    "links"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A project is returned for the targeted org",
            "headers": {
              "deprecation": {
                "$ref": "#/components/headers/DeprecationHeader"
              },
              "snyk-request-id": {
                "$ref": "#/components/headers/RequestIdResponseHeader"
              },
              "snyk-version-lifecycle-stage": {
                "$ref": "#/components/headers/VersionStageResponseHeader"
              },
              "snyk-version-requested": {
                "$ref": "#/components/headers/VersionRequestedResponseHeader"
              },
              "snyk-version-served": {
                "$ref": "#/components/headers/VersionServedResponseHeader"
              },
              "sunset": {
                "$ref": "#/components/headers/SunsetHeader"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Get project by project ID.",
        "tags": [
          "Projects"
        ],
        "x-snyk-api-releases": [
          "2022-02-01~experimental",
          "2022-08-12~experimental",
          "2022-12-21~experimental",
          "2023-02-15"
        ],
        "x-snyk-api-version": "2023-02-15"
      }
    },
    "/orgs/{org_id}/targets": {
      "get": {
        "description": "Get a list of an organization's targets.",
        "operationId": "getOrgsTargets",
        "parameters": [
          {
            "description": "The id of the org to return a list of targets",
            "in": "path",
            "name": "org_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Return targets that match the provided value of isPrivate",
            "in": "query",
            "name": "isPrivate",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Return targets that match the provided remoteUrl. Currently null for all projects except those imported from the CLI",
            "in": "query",
            "name": "remoteUrl",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return targets that match the provided origin",
            "in": "query",
            "name": "origin",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether to exclude targets from the response that have no associated projects",
            "in": "query",
            "name": "excludeEmpty",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "Return targets with display names starting with the provided string",
            "in": "query",
            "name": "displayName",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/Target"
                      },
                      "type": "array"
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/JsonApi"
                    },
                    "links": {
                      "$ref": "#/components/schemas/Links"
                    }
                  },
                  "required": [
                    "jsonapi",
                    "data",
                    "links"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A list of targets is returned for the targeted org",
            "headers": {
              "deprecation": {
                "$ref": "#/components/headers/DeprecationHeader"
              },
              "snyk-request-id": {
                "$ref": "#/components/headers/RequestIdResponseHeader"
              },
              "snyk-version-lifecycle-stage": {
                "$ref": "#/components/headers/VersionStageResponseHeader"
              },
              "snyk-version-requested": {
                "$ref": "#/components/headers/VersionRequestedResponseHeader"
              },
              "snyk-version-served": {
                "$ref": "#/components/headers/VersionServedResponseHeader"
              },
              "sunset": {
                "$ref": "#/components/headers/SunsetHeader"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Get targets by org ID",
        "tags": [
          "Targets"
        ],
        "x-snyk-api-releases": [
          "2021-08-20~beta"
        ],
        "x-snyk-api-version": "2021-08-20~beta"
      }
    },
    "/orgs/{org_id}/targets/{target_id}": {
      "get": {
        "description": "Get a specified target for an organization.",
        "operationId": "getOrgsTarget",
        "parameters": [
          {
            "description": "The id of the org to return the target from",
            "in": "path",
            "name": "org_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "The id of the target to return",
            "in": "path",
            "name": "target_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Target"
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/JsonApi"
                    },
                    "links": {
                      "$ref": "#/components/schemas/Links"
                    }
                  },
                  "required": [
                    "jsonapi",
                    "data"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A single target is returned if it is found in the specified org",
            "headers": {
              "deprecation": {
                "$ref": "#/components/headers/DeprecationHeader"
              },
              "snyk-request-id": {
                "$ref": "#/components/headers/RequestIdResponseHeader"
              },
              "snyk-version-lifecycle-stage": {
                "$ref": "#/components/headers/VersionStageResponseHeader"
              },
              "snyk-version-requested": {
                "$ref": "#/components/headers/VersionRequestedResponseHeader"
              },
              "snyk-version-served": {
                "$ref": "#/components/headers/VersionServedResponseHeader"
              },
              "sunset": {
                "$ref": "#/components/headers/SunsetHeader"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Get target by org ID",
        "tags": [
          "Targets"
        ],
        "x-snyk-api-releases": [
          "2021-08-20~beta"
        ],
        "x-snyk-api-version": "2021-08-20~beta"
      }
    },
    "/orgs/{org_id}/users/{id}": {
      "get": {
        "description": "Get a summary of user.",
        "operationId": "getUser",
        "parameters": [
          {
            "description": "The id of the org",
            "in": "path",
            "name": "org_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "The id of the user",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/User"
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/JsonApi"
                    }
                  },
                  "required": [
                    "jsonapi",
                    "data"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "User details",
            "headers": {
              "deprecation": {
                "$ref": "#/components/headers/DeprecationHeader"
              },
              "snyk-request-id": {
                "$ref": "#/components/headers/RequestIdResponseHeader"
              },
              "snyk-version-lifecycle-stage": {
                "$ref": "#/components/headers/VersionStageResponseHeader"
              },
              "snyk-version-requested": {
                "$ref": "#/components/headers/VersionRequestedResponseHeader"
              },
              "snyk-version-served": {
                "$ref": "#/components/headers/VersionServedResponseHeader"
              },
              "sunset": {
                "$ref": "#/components/headers/SunsetHeader"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Get user by ID",
        "tags": [
          "Users"
        ],
        "x-snyk-api-releases": [
          "2021-09-13~beta"
        ],
        "x-snyk-api-version": "2021-09-13~beta"
      }
    },
    "/orgs/{org_id}/projects": {
      "get": {
        "description": "List all Projects for an Org.",
        "operationId": "listOrgProjects",
        "parameters": [
          {
            "description": "The ID of the org that the projects belong to.",
            "in": "path",
            "name": "org_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Return projects that belong to the provided targets",
            "in": "query",
            "name": "target_id",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "The collection count.",
            "in": "query",
            "name": "meta_count",
            "schema": {
              "enum": [
                "only"
              ],
              "type": "string"
            }
          },
          {
            "description": "Return projects that match the provided IDs.",
            "explode": false,
            "in": "query",
            "name": "ids",
            "schema": {
              "items": {
                "format": "uuid",
                "type": "string"
              },
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Return projects that match the provided names.",
            "explode": false,
            "in": "query",
            "name": "names",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Return projects that match the provided origins.",
            "explode": false,
            "in": "query",
            "name": "origins",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Return projects that match the provided types.",
            "explode": false,
            "in": "query",
            "name": "types",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Expand relationships.",
            "explode": false,
            "in": "query",
            "name": "expand",
            "schema": {
              "items": {
                "enum": [
                  "target"
                ],
                "type": "string"
              },
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Filter projects uploaded and monitored before this date (encoded value)",
            "example": "2021-05-29T09:50:54.014Z",
            "in": "query",
            "name": "cli_monitored_before",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Filter projects uploaded and monitored after this date (encoded value)",
            "example": "2021-05-29T09:50:54.014Z",
            "in": "query",
            "name": "cli_monitored_after",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "attributes": {
                            "$ref": "#/components/schemas/ProjectAttributes"
                          },
                          "id": {
                            "description": "Resource ID.",
                            "format": "uuid",
                            "type": "string"
                          },
                          "meta": {
                            "additionalProperties": false,
                            "properties": {
                              "cli_monitored_at": {
                                "description": "The date that the project was last uploaded and monitored using cli.",
                                "example": "2021-05-29T09:50:54.014Z",
                                "format": "date-time",
                                "nullable": true,
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "relationships": {
                            "$ref": "#/components/schemas/ProjectRelationships"
                          },
                          "type": {
                            "description": "The Resource type.",
                            "example": "project",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "attributes"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/JsonApi"
                    },
                    "links": {
                      "$ref": "#/components/schemas/Links"
                    },
                    "meta": {
                      "properties": {
                        "count": {
                          "minimum": 0,
                          "type": "number"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "jsonapi",
                    "links"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A list of projects is returned for the targeted org",
            "headers": {
              "deprecation": {
                "$ref": "#/components/headers/DeprecationHeader"
              },
              "snyk-request-id": {
                "$ref": "#/components/headers/RequestIdResponseHeader"
              },
              "snyk-version-lifecycle-stage": {
                "$ref": "#/components/headers/VersionStageResponseHeader"
              },
              "snyk-version-requested": {
                "$ref": "#/components/headers/VersionRequestedResponseHeader"
              },
              "snyk-version-served": {
                "$ref": "#/components/headers/VersionServedResponseHeader"
              },
              "sunset": {
                "$ref": "#/components/headers/SunsetHeader"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "List all Projects for an Org with the given Org ID.",
        "tags": [
          "Projects"
        ],
        "x-snyk-api-releases": [
          "2021-06-04~beta",
          "2022-08-12~experimental",
          "2022-12-21~experimental",
          "2023-02-15"
        ],
        "x-snyk-api-version": "2023-02-15"
      }
    }
  },
  "security": [
    {
      "BearerAuth": []
    },
    {
      "APIToken": []
    }
  ],
  "servers": [
    {
      "description": "Snyk REST API",
      "url": "http://localhost:5003"
    }
  ],
  "tags": [
    {
      "description": "Third-party Apps that integrate with the Snyk platform. See our [overview documentation](https://docs.snyk.io/integrations/snyk-apps) for more details.",
      "name": "Apps"
    },
    {
      "description": "Snyk Cloud API",
      "name": "Cloud"
    },
    {
      "description": "Container Image resource",
      "name": "ContainerImage"
    },
    {
      "description": "Through the Custom Base Image Recommendation feature, Snyk can recommend an image upgrade from a pool of the your internal images. \nThis allows your teams to be notified of newer and more secure versions of internal base images.\n",
      "name": "Custom Base Images"
    },
    {
      "description": "An example of a v3 API resource",
      "name": "Examples"
    },
    {
      "description": "Groups can contain multiple organizations, allowing you to collaborate with multiple teams.",
      "name": "Groups"
    },
    {
      "description": "Infrastructure as Code Settings.",
      "name": "IacSettings"
    },
    {
      "description": "Organization Invites.",
      "name": "Invites"
    },
    {
      "description": "Issues relevant to a particular package",
      "name": "Issues"
    },
    {
      "description": "The OpenAPI specification for Snyk Cloud API",
      "name": "OpenAPI"
    },
    {
      "description": "Snyk Organizations",
      "name": "Orgs"
    },
    {
      "description": "A project is a single external resource which has been scanned by Snyk such as a manifest file or a container image. It may also be continuously monitored by Snyk.\n",
      "name": "Projects"
    },
    {
      "description": "A Software Bill of Materials document",
      "name": "SBOM"
    },
    {
      "description": "A target is the external source of data from which Snyk can scan resources and create projects. Many projects may exist for the same target.\n",
      "name": "Targets"
    },
    {
      "description": "Snyk Users",
      "name": "Users"
    }
  ],
  "x-snyk-api-lifecycle": "released",
  "x-snyk-api-version": "2023-04-28~beta"
}